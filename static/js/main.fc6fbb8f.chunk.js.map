{"version":3,"sources":["bar/Bar1.js","bar/Bar2.js","bar/BarChart.js","bar/Bar3.js","bar/Bar4.js","bar/BarChart1.js","bar/Bar5.js","bar/useResizeObserver.js","bar/StackedBarChart.js","bar/Bar6.js","circle/Circle1.js","circle/Circle2.js","line/Line1.js","line/Line2.js","line/Line3.js","tba/color.type.ts","line/Line4.js","line/Line5.js","pie/Pie1.js","tba/useResizeObserver.js","tba/BarChart_TBA1.js","tba/TBA1.js","tba/StackChart_TBA2.js","tba/TBA2.js","tba/LineChart_TBA3.js","tba/TBA3.js","Home.js","App.js","index.js"],"names":["Bar1","history","useState","data","setData","svgRef","useRef","useEffect","svg","select","current","xScale","scaleBand","domain","map","value","index","range","padding","yScale","scaleLinear","colorScale","clamp","xAxis","axisBottom","ticks","length","style","call","yAxis","axisRight","selectAll","join","attr","bandwidth","transition","Fragment","id","ref","className","onClick","Bar2","on","event","nodes","indexOf","target","enter","app2end","text","remove","filter","Math","round","random","BarChart","wrapperRef","dimensions","setDimansions","observeTarget","resizeObserver","ResizeObserver","entries","forEach","entry","contentRect","observe","unobserve","useResizeObserver","console","log","width","height","append","marginBottom","Bar3","Bar4","h","d3","val","i","v","BarChart1","Bar5","setDimensions","StackedBarChart","keys","colors","getBoundingClientRect","layers","stack","order","stackOrderAscending","stackGenerator","extent","max","layer","sequence","d","year","paddingInner","key","axisLeft","allKeys","Bar6","setKeys","type","checked","includes","onChange","e","Array","from","Set","_key","htmlFor","color","Circle1","update","exit","Circle2","Line1","lineData","setLineData","lineRef","svgLine","myLine","line","x","y","curve","curveCardinal","Line2","tickFormat","Line3","ColorsEnum","generateScaledLine","Line4","makeGraph","margin","month","nice","g","rickSizeOuter","tickValues","tickSize","appen","datum","Line5","React","activeIndex","setActiveIndex","then","reverse","parseDate","date","price","Number","yMinValue","yMaxValue","getX","getY","linePath","areaPath","y0","y1","viewBox","onMouseMove","bisect","left","x0","invert","onMouseLeave","tickPadding","transform","fill","opacity","strokeWidth","stroke","dy","text-anchor","href","item","textAnchor","cx","cy","r","property","Pie1","pieChart","pieData","arc","innerRadius","outerRadius","tooldiv","pageY","pageX","ColorThemeEnum","region","BarChart_TBA1","extend","a","cn1","toString","replace","startX","document","getElementById","marginLeft_","window","pageXOffset","ax","pageYOffset","top","parseInt","ay","html","TBA1","display","justifyContent","fontSize","StackChart_TBA2","먹거리","cn2","관광지","cn3","숙박","TBA2","marginLeft","LineChart_TBA3","max1","uv","max2","pv","name","generateScaledLine1","generateScaledLine2","b","area","curveLinear","currentTarget","amt","Home","to","App","path","element","TBA3","ReactDOM","render","StrictMode","base"],"mappings":"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","file":"static/js/main.fc6fbb8f.chunk.js","sourcesContent":["\nimport React, {useRef, useEffect, useState} from \"react\";\nimport {select, scaleLinear, axisBottom, axisRight ,scaleBand, selectAll } from \"d3\";\nimport \"./Bar1.css\";\nimport { svg } from \"d3\";\n\n  function Bar1({ history }){\n    const [data, setData] = useState([8, 30, 50, 70, 120, 200, 210]);\n    const svgRef = useRef();\n    \n   useEffect(() => {\n      const svg = select(svgRef.current);\n      \n      const xScale = scaleBand()\n      .domain(data.map((value, index) => index))\n      .range([0,600])\n      .padding(0.5 );\n\n\n    const yScale = scaleLinear()\n     .domain([0,400])\n     .range([400, 0]);\n\n     const colorScale = scaleLinear()\n     .domain([100,200,400])\n     .range([\"green\",\"orange\", \"red\"])\n     .clamp(true);\n\n     const xAxis = axisBottom(xScale).ticks(data.length);\n     svg\n      .select(\".x-axis\")\n      .style(\"transform\", \"translateY(400px)\")\n      .call(xAxis);        //xaxis(svg,select(\"x-axis\"))\n\n     const yAxis = axisRight(yScale); \n\n     svg\n     .select(\".y-axis\")\n     .style(\"transform\", \"translateX(600px)\")\n     .call(yAxis);        //xaxis(svg,select(\"x-axis\"))\n\n     svg.selectAll(\".bar\")\n      .data(data)\n      .join(\"rect\")\n      .attr(\"calss\", \"bar\")\n      .attr(\"fill\", colorScale)\n      .attr(\"y\", -400)\n      .style(\"transform\" , \"scale(1, -1)\")\n      .attr(\"x\", (value, index) => xScale(index)) \n      .attr(\"width\", xScale.bandwidth())\n      .transition()\n      .attr(\"height\", value => 400 - yScale(value));\n      \n\n    }, [data]);\n  \n     \n  return(\n  <React.Fragment>\n  <svg id=\"a1\" ref={svgRef}>\n    <g className=\"x-axis\" />\n    <g className=\"y-axis\" />\n  </svg>\n    <br />\n    <br />\n    <br />\n    <button onClick={() => setData(data.map(value => value + 10))}>up - 5</button>\n    <button onClick={() => setData(data.map(value => value - 10))}>down - 5</button>\n  </React.Fragment>\n  )\n}\n\nexport default Bar1;","import React, { useRef, useEffect, useState } from \"react\";\nimport \"./Bar2.css\";\nimport { select, axisBottom, axisRight, scaleLinear, scaleBand } from \"d3\";\n\nfunction Bar2() {\n  const [data, setData] = useState([25, 30, 45, 60, 10, 65, 75]);\n  const svgRef = useRef();\n\n  // will be called initially and on every data change\n  useEffect(() => {\n    const svg = select(svgRef.current);\n\n    // scales\n    const xScale = scaleBand()\n      .domain(data.map((value, index) => index))\n      .range([0, 300])\n      .padding(0.5);\n\n    const yScale = scaleLinear().domain([0, 150]).range([150, 0]);\n\n    const colorScale = scaleLinear()\n      .domain([75, 100, 150])\n      .range([\"green\", \"orange\", \"red\"])\n      .clamp(true);\n\n    // create x-axis\n    const xAxis = axisBottom(xScale).ticks(data.length);\n    svg.select(\".x-axis\").style(\"transform\", \"translateY(150px)\").call(xAxis);\n\n    // create y-axis\n    const yAxis = axisRight(yScale);\n    svg.select(\".y-axis\").style(\"transform\", \"translateX(300px)\").call(yAxis);\n\n    // draw the bars\n    svg\n      .selectAll(\".bar\")\n      .data(data)\n      .join(\"rect\")\n      .attr(\"class\", \"bar\")\n      .style(\"transform\", \"scale(1, -1)\")\n      .attr(\"x\", (value, index) => xScale(index))\n      .attr(\"y\", -150)\n      .attr(\"width\", xScale.bandwidth())\n      .on(\"mouseenter\", (event, value) => {\n        // events have changed in d3 v6:\n        // https://observablehq.com/@d3/d3v6-migration-guide#events\n        const index = svg.selectAll(\".bar\").nodes().indexOf(event.target);\n        svg\n          .selectAll(\".tooltip\")\n          .data([value])\n          .join((enter) => enter.app2end(\"text\").attr(\"y\", yScale(value) - 4))\n          .attr(\"class\", \"tooltip\")\n          .text(value)\n          .attr(\"x\", xScale(index) + xScale.bandwidth() / 2)\n          .attr(\"text-anchor\", \"middle\")\n          .transition()\n          .attr(\"y\", yScale(value) - 8)\n          .attr(\"opacity\", 1);\n      })\n      .on(\"mouseleave\", () => svg.select(\".tooltip\").remove())\n      .transition()\n      .attr(\"fill\", colorScale)\n      .attr(\"height\", (value) => 150 - yScale(value));\n  }, [data]);\n\n  return (\n    <React.Fragment>\n      <svg id=\"a2\" ref={svgRef}>\n        <g className=\"x-axis\" />\n        <g className=\"y-axis\" />\n      </svg>\n      <br />\n      \n      <button id='b2' onClick={() => setData(data.map((value) => value + 5))}>\n        Update data\n      </button>\n      <button onClick={() => setData(data.filter((value) => value < 35))}>\n        Filter data\n      </button>\n      <button\n        onClick={() => setData([...data, Math.round(Math.random() * 100)])}\n      >\n        Add data\n      </button>\n    </React.Fragment>\n  );\n}\n\nexport default Bar2;","import React, { useRef, useEffect, useState } from \"react\";\nimport { select, axisBottom, axisRight, scaleLinear, scaleBand } from \"d3\";\nimport ResizeObserver from 'resize-observer-polyfill'; //have to install to npm\n\nconst useResizeObserver = ref => {\n  const [dimensions, setDimansions] = useState(null);\n  useEffect(() => {\n    const observeTarget = ref.current;\n    const resizeObserver = new ResizeObserver(entries => {\n      entries.forEach(entry => {\n        setDimansions(entry.contentRect)\n      })\n   });\n   resizeObserver.observe(observeTarget);\n   return () => {\n     resizeObserver.unobserve(observeTarget);\n   };\n  }, [ref]); \n  return dimensions;\n}\n \nfunction BarChart({data}) {\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n\n  // will be called initially and on every data change\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    console.log(dimensions);\n\n    if(!dimensions) return;\n    // scales\n    const xScale = scaleBand()\n      .domain(data.map((value, index) => index))\n      .range([0, dimensions.width]) //change\n      .padding(0.5);    \n\n    const yScale = scaleLinear()\n      .domain([0, 150])   //todo \n      .range([dimensions.height, 0]);   //change\n\n    const colorScale = scaleLinear()\n      .domain([75, 100, 150])\n      .range([\"green\", \"orange\", \"red\"])\n      .clamp(true);\n\n    // create x-axis\n    const xAxis = axisBottom(xScale).ticks(data.length);\n    svg.select(\".x-axis\") \n      .style(\"transform\", `translateY(${dimensions.height}px)`)\n      .call(xAxis);\n\n    // create y-axis\n    const yAxis = axisRight(yScale);\n    svg\n      .select(\".y-axis\")\n      .style(\"transform\", `translateX(${dimensions.width}px)`)\n      .call(yAxis);\n\n    // draw the bars\n    svg\n      .selectAll(\".bar\")\n      .data(data)\n      .join(\"rect\")\n      .attr(\"class\", \"bar\")\n      .style(\"transform\", \"scale(1, -1)\")\n      .attr(\"x\", (value, index) => xScale(index))\n      .attr(\"y\", -dimensions.height)\n      .attr(\"width\", xScale.bandwidth())\n      .on(\"mouseenter\", (event, value) => {\n        // events have changed in d3 v6:\n        // https://observablehq.com/@d3/d3v6-migration-guide#events\n        const index = svg.selectAll(\".bar\").nodes().indexOf(event.target);\n        svg\n          .selectAll(\".tooltip\")\n          .data([value])\n          .join((enter) => enter.append(\"text\").attr(\"y\", yScale(value - 4))) //밑에서 올라오게 작동\n          .attr(\"class\", \"tooltip\")\n          .text(value)\n          .attr(\"x\", xScale(index) + xScale.bandwidth() / 2)  //툴팁위치\n          .attr(\"text-anchor\", \"middle\")    //텍스트 중앙으로\n          .transition()   //툴팁 움직이게\n          .attr(\"y\", yScale(value) - 8)\n          .attr(\"opacity\", 1);\n      })\n      .on(\"mouseleave\", () => svg.select(\".tooltip\").remove())\n      .transition()\n      .attr(\"fill\", colorScale)\n      .attr(\"height\", (value) => dimensions.height - yScale(value));\n  }, [data, dimensions]);\n\n  return (\n    <React.Fragment>\n      <div ref={wrapperRef} style={{marginBottom: \"2rem\"}}>\n        <svg id=\"a3\" ref={svgRef}>\n          <g className=\"x-axis\" />\n          <g className=\"y-axis\" />\n        </svg>\n      </div>\n    </React.Fragment>\n  );\n} \n\nexport default BarChart;","import React, { useState } from \"react\";\nimport \"./Bar3.css\";\nimport BarChart from \"./BarChart\";\n//1134\nfunction Bar3() {\n  const [data, setData] = useState([22, 30, 45, 60, 10, 65, 75]);\n  \n  return (\n    <React.Fragment>\n      <div id='bar3_div'>\n      <BarChart data={data} />\n      <button className=\"b3\" onClick={() => setData(data.map((value) => value + 5))}>\n        Update data\n      </button>\n      <button className=\"b3\" onClick={() => setData(data.filter((value) => value < 35) )}>\n        Filter data\n      </button>\n      <button className=\"b3\"\n        onClick={() => setData([...data, Math.round(Math.random() * 100)])}\n      >\n        Add data\n      </button>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default Bar3;","import React, { useRef, useEffect, useState } from \"react\";\nimport * as d3 from \"d3\";\nimport \"./Bar4.css\";\n\n\nfunction Bar4(){\n  const [data] = useState([200, 250, 60, 150, 100, 175]);\n  const svgRef = useRef();\n  \n  useEffect(() => {\n    //setting up svg container\n    const w = 400;\n    const h = 300;\n    const svg = d3.select(svgRef.current)\n      .attr('width', w)\n      .attr('heigh', h)\n      .style('overflow', 'visible')\n      .style('margin-top', '75px')\n      .style('margin-left', '75px');\n\n    //setting the scaling\n    const xScale = d3.scaleBand()\n      .domain(data.map((val, i) => i))\n      .range([0,w])\n      .padding(0.5);\n    const yScale = d3.scaleLinear()\n      .domain([0, h])\n      .range([h, 0]);\n\n\n    //setting the axis\n    const xAxis = d3.axisBottom(xScale)\n      .ticks(data.length);\n    \n    const yAxis = d3.axisLeft(yScale)\n      .ticks(5);  \n\n    svg.append('g')\n      .call(xAxis)\n      .attr('transform', `translate(0, ${h})`)\n\n    svg.append('g')\n      .call(yAxis);\n    \n      //setting the svg data\n    svg.selectAll('.bar')\n      .data(data)\n      .join('rect')\n        .attr('x', (v,i) => xScale(i))\n        .attr('y', yScale)\n        .attr('width', xScale.bandwidth())\n        .attr('height', val => h -  yScale(val));\n\n  }, [data]);\n  return (\n    <div className=\"bar4\">\n      <svg id=\"bar4_div\" ref={svgRef}></svg>\n    </div>\n  );\n}\n\nexport default Bar4;","import React, { useRef, useEffect, useState } from \"react\";\nimport { select, axisBottom, axisRight, scaleLinear, scaleBand } from \"d3\";\nimport ResizeObserver from 'resize-observer-polyfill'; //have to install to npm\n\n//아직 못한 부분\n//1. tooltip꾸미기\n//2. 그라데이션\n\nconst useResizeObserver = ref => {\n  const [dimensions, setDimansions] = useState(null);\n  useEffect(() => {\n    const observeTarget = ref.current;\n    const resizeObserver = new ResizeObserver(entries => {\n      entries.forEach(entry => {\n        setDimansions(entry.contentRect)\n      })\n   });\n   resizeObserver.observe(observeTarget);\n   return () => {\n     resizeObserver.unobserve(observeTarget);\n   };\n  }, [ref]); \n  return dimensions;\n}\n \nfunction BarChart1({data}) {\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n\n  // will be called initially and on every data change\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    console.log(dimensions);\n\n    if(!dimensions) return;\n    // scales\n    const xScale = scaleBand()\n      .domain(data.map((value, index) => index ))\n      .range([0, dimensions.width]) //change\n      .padding(0.7);    \n\n    const yScale = scaleLinear()\n      .domain([0, dimensions.height])   //todo \n      .range([dimensions.height, 0]);   //change\n\n    const colorScale = scaleLinear()\n      .domain([15, 100, 150])\n      .range([\"green\", \"orange\", \"red\"])\n      .clamp(true);\n\n    // create x-axis\n    const xAxis = axisBottom(xScale).ticks(data.length);\n    svg.select(\".x-axis\") \n      .style(\"transform\", `translateY(${dimensions.height}px)`)\n      .call(xAxis);\n\n    // create y-axis\n    const yAxis = axisRight(yScale);\n    svg\n      .select(\".y-axis\")\n      .style(\"transform\", `translateX(${dimensions.width}px)`)\n      .call(yAxis);\n\n    // draw the bars\n    svg\n      .selectAll(\".bar\")\n      .data(data)\n      .join(\"rect\")\n      .attr(\"class\", \"bar\")\n      .style(\"transform\", \"scale(1, -1)\")\n      .attr(\"x\", (value, index) => xScale(index))\n      .attr(\"y\", -dimensions.height)\n      .attr(\"width\", xScale.bandwidth())\n      .on(\"mouseenter\", (event, value) => {\n        // events have changed in d3 v6:\n        // https://observablehq.com/@d3/d3v6-migration-guide#events\n        const index = svg.selectAll(\".bar\").nodes().indexOf(event.target);\n        svg\n          .selectAll(\".tooltip\")\n          .data([value])\n          .join((enter) => enter.append(\"text\").attr(\"y\", yScale(value) - 4))\n          .attr(\"class\", \"tooltip\")\n          .text(value)\n          .attr(\"x\", xScale(index) + xScale.bandwidth() / 2)\n          .attr(\"text-anchor\", \"middle\")\n          .transition()\n          .attr(\"y\", yScale(value) - 8)\n          .attr(\"opacity\", 1);\n      })\n      .on(\"mouseleave\", () => svg.select(\".tooltip\").remove())\n      .transition()\n      .attr(\"fill\", colorScale)\n      .attr(\"height\", (value) => dimensions.height - yScale(value));\n  }, [data, dimensions]);\n\n  return (\n    <React.Fragment>\n      <div id=\"bar5_div\" ref={wrapperRef} style={{marginBottom: \"2rem\"}}>\n        <svg id=\"bar5_svg\" ref={svgRef}>\n          <g className=\"x-axis\" />\n          <g className=\"y-axis\" />\n        </svg>\n      </div>\n    </React.Fragment>\n  );\n} \n\nexport default BarChart1;","import React, { useState } from \"react\";\nimport \"./Bar5.css\";\nimport BarChart1 from \"./BarChart1\";\n//1134\nfunction Bar5() {\n  const [data, setData] = useState([22, 30, 45, 60, 10, 65, 75, 90]);\n  \n  return (\n    <React.Fragment>\n      <BarChart1 data={data} />\n      <div id=\"bar5_button_div\">\n      <button className=\"bar5_button\" onClick={() => setData(data.map((value) => value + 5))}>\n        Update data\n      </button>\n      <button className=\"bar5_button\" onClick={() => setData(data.filter((value) => value < 35))}>\n        Filter data\n      </button>\n      <button className=\"bar5_button\"\n        onClick={() => setData([...data, Math.round(Math.random() * 100)])}\n      >\n        Add data\n      </button>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default Bar5;","\n   \nimport { useEffect, useState } from \"react\";\nimport ResizeObserver from \"resize-observer-polyfill\";\n\n/**\n * Hook, that returns the current dimensions of an HTML element.\n * Doesn't play well with SVG.\n */\n\nconst useResizeObserver = ref => {\n  const [dimensions, setDimensions] = useState(null);\n  useEffect(() => {\n    const observeTarget = ref.current;\n    const resizeObserver = new ResizeObserver(entries => {\n      entries.forEach(entry => {\n        setDimensions(entry.contentRect);\n      });\n    });\n    resizeObserver.observe(observeTarget);\n    return () => {\n      resizeObserver.unobserve(observeTarget);\n    };\n  }, [ref]);\n  return dimensions;\n};\n\nexport default useResizeObserver;","import React, { useEffect, useRef, useState } from \"react\";\nimport {\n  select,\n  scaleBand,\n  axisBottom,\n  stack,\n  max,\n  scaleLinear,\n  axisLeft,\n  stackOrderAscending\n} from \"d3\";\nimport useResizeObserver from \"./useResizeObserver\";\n//import ResizeObserver from \"resize-observer-polyfill\";\n/**\n * Component that renders a StackedBarChart\n */\nfunction StackedBarChart({ data, keys, colors }) {\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n\n  // will be called initially and on every data change\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    const { width, height } =\n      dimensions || wrapperRef.current.getBoundingClientRect();\n\n    // stacks / layers\n    const stackGenerator = stack()\n      .keys(keys)\n      .order(stackOrderAscending);\n    const layers = stackGenerator(data);\n    const extent = [\n      0,\n      max(layers, layer => max(layer, sequence => sequence[1]))\n    ];\n\n    // scales\n    const xScale = scaleBand()\n      .domain(data.map(d => d.year))\n      .range([0, width])\n      .paddingInner(0.4);\n\n    const yScale = scaleLinear()\n      .domain(extent)\n      .range([height, 0]);\n\n    // rendering\n    svg\n      .selectAll(\".layer\")\n      .data(layers)\n      .join(\"g\")\n      .attr(\"class\", \"layer\")\n      .attr(\"fill\", layer => colors[layer.key])\n      .selectAll(\"rect\")\n      .data(layer => layer)\n      .join(\"rect\")\n      .attr(\"x\", sequence => xScale(sequence.data.year))\n      .attr(\"width\", xScale.bandwidth())\n      .attr(\"y\", sequence => yScale(sequence[1]))\n      .attr(\"height\", sequence => yScale(sequence[0]) - yScale(sequence[1]));\n\n    // axes\n    const xAxis = axisBottom(xScale);\n    svg\n      .select(\".x-axis\")\n      .attr(\"transform\", `translate(0, ${height})`)\n      .call(xAxis);\n\n    const yAxis = axisLeft(yScale);\n    svg.select(\".y-axis\").call(yAxis);\n  }, [colors, data, dimensions, keys]);\n\n  return (\n    <React.Fragment>\n      <div ref={wrapperRef} style={{ marginBottom: \"2rem\" }}>\n        <svg ref={svgRef}>\n          <g className=\"x-axis\" />\n          <g className=\"y-axis\" />\n        </svg>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default StackedBarChart;","import React, { useState } from \"react\";\nimport \"./Bar6.css\";\nimport StackedBarChart from \"./StackedBarChart\";\n\nconst data = [\n  {\n    year: \"1일\",\n    \"먹거리\": 10,\n    \"관광지\": 2,\n    \"숙박\": 32\n  },\n  {\n    year: \"2일\",\n    \"먹거리\": 10,\n    \"관광지\": 20,\n    \"숙박\": 30\n  },\n  {\n    year: \"3일\",\n    \"먹거리\": 10,\n    \"관광지\": 20,\n    \"숙박\": 30\n  },\n  {\n    year: \"4일\",\n    \"먹거리\": 10,\n    \"관광지\": 20,\n    \"숙박\": 30\n  },\n  {\n    year: \"5일\",\n    \"먹거리\": 10,\n    \"관광지\": 20,\n    \"숙박\": 30\n  },\n  {\n    year: \"6일\",\n    \"먹거리\": 10,\n    \"관광지\": 20,\n    \"숙박\": 30\n  },\n  {\n    year: \"7일\",\n    \"먹거리\": 10,\n    \"관광지\": 20,\n    \"숙박\": 30\n  },\n  {\n    year: \"8일\",\n    \"먹거리\": 10,\n    \"관광지\": 20,\n    \"숙박\": 30\n  },\n  {\n    year: \"9일\",\n    \"먹거리\": 10,\n    \"관광지\": 20,\n    \"숙박\": 30\n  },\n  {\n    year: \"10일\",\n    \"먹거리\": 10,\n    \"관광지\": 20,\n    \"숙박\": 30\n  },\n  {\n    year: \"11일\",\n    \"먹거리\": 10,\n    \"관광지\": 20,\n    \"숙박\": 30\n  },\n  {\n    year: \"12일\",\n    \"먹거리\": 10,\n    \"관광지\": 20,\n    \"숙박\": 30\n  },\n  {\n    year: \"13일\",\n    \"먹거리\": 10,\n    \"관광지\": 20,\n    \"숙박\": 30\n  },\n  {\n    year: \"14일\",\n    \"먹거리\": 10,\n    \"관광지\": 20,\n    \"숙박\": 30\n  },\n  {\n    year: \"15일\",\n    \"먹거리\": 10,\n    \"관광지\": 20,\n    \"숙박\": 30\n  },\n];\n\nconst allKeys = [\"먹거리\", \"관광지\", \"숙박\"];\n\nconst colors = {\n  \"먹거리\": \"#C96BFF\",\n  \"관광지\": \"#2EBFFF\",\n  \"숙박\": \"#3478FF\"\n};\n\nfunction Bar6() {\n  const [keys, setKeys] = useState(allKeys);\n  return (\n    <React.Fragment>\n      <h2>Stacked Bar Chart with D3 </h2>\n      <StackedBarChart data={data} keys={keys} colors={colors} />\n\n      <div id=\"TBA1_STACK\" className=\"fields\">\n        {allKeys.map(key => (\n          <div key={key} className=\"field\">\n            <input\n              id={key}\n              type=\"checkbox\"\n              checked={keys.includes(key)}\n              onChange={e => {\n                if (e.target.checked) {\n                  setKeys(Array.from(new Set([...keys, key])));\n                } else {\n                  setKeys(keys.filter(_key => _key !== key));\n                }\n              }}\n            />\n            <label htmlFor={key} style={{ color: colors[key] }}>\n              {key}\n            </label>\n          </div>\n        ))}\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default Bar6;","import React, {useRef, useEffect, useState} from \"react\";\nimport {select} from \"d3\";\nimport \"./Circle1.css\";\n\nfunction Circle1() {\n  const svgRef = useRef();\n  const [data, setData] = useState([5,20,25,30,40,60,80,100,150]);\n\n\nuseEffect(() => {\n  const svg = select(svgRef.current);\n  svg\n    .selectAll(\"circle\")\n    .data(data)\n    .join(\n\n      (enter) => enter.append(\"circle\"),\n      (update) => update.attr(\"class\", \"updated\"),\n      (exit) => exit.remove()\n    )\n\n    .attr(\"r\", (value) => value)\n    .attr(\"cx\", (value) => value * 2)\n    .attr(\"cy\", (value) => value * 2)\n    .attr(\"stroke\", \"red\");\n}, [data]);\n\nconst increaseData = () => {\n  setData(data.map((value) => value + 5));\n};\nconst decreaseData = () => {\n  setData(data.map((value) => value -5));\n};\n\nreturn (\n  <React.Fragment>\n    <svg id=\"a5\" ref={svgRef}>\n      <circle />\n    </svg>\n    <br/>\n    <br/>\n    <button className=\"b5\" onClick={increaseData}>+5.</button>\n    <button className=\"b5\" onClick={decreaseData}>-5</button>\n  </React.Fragment>\n);\n}\n\nexport default Circle1;\n","import React, {useRef, useEffect, useState} from \"react\";\nimport {select, line, curveCardinal} from \"d3\";\nimport \"./Circle2.css\";\n\n\n  function Circle2\n(){\n    \n    const [data, setData] = useState([25, 30 , 35, 59, 80, 100]);\n    const svgRef = useRef();\n  \n    useEffect(() => {\n      const svg = select(svgRef.current);\n      svg\n      .selectAll(\"circle\").data(data)\n      .join(\"circle\")\n      .attr(\"r\", value=>value)\n      .attr(\"cx\", value=>value*2)\n      .attr(\"cy\", value=>value*2)\n      .attr(\"stroke\", \"red\")\n    }, [data]);\n  \n  return(\n  <React.Fragment>\n  <svg id=\"a6\" ref={svgRef}></svg>\n    <br />\n    <button onClick={() => setData(data.map(value => value + 5))}>add 10 to data</button>\n    <button onClick={() => setData(data.filter(value => value <= 65))}>filter</button>\n  </React.Fragment>\n  )\n}\n\nexport default Circle2;","//https://velog.io/@bangina/D3.js-React.js-Hooks-%ED%95%A8%EA%BB%98-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0-2.-%EA%B3%A1%EC%84%A0-%EA%B7%B8%EB%9E%98%ED%94%84-%EB%A7%8C%EB%93%A4%EA%B8%B0\nimport React, {useRef, useEffect, useState} from \"react\";\nimport {select, line, curveCardinal} from \"d3\";\nimport \"./Line1.css\";\nconst Line1 = () => {\n  //라인에 바인딩 될 data배열 생성\n  const [lineData, setLineData] = useState([1,5,34,22,50,100,50,70,20,10,2,2,2,2,1,100,12,75]);\n  //직접 dom에서 svg를 조작하기 위해 useRef 사용\n  const lineRef = useRef();\n\n  useEffect(() => {\n    const svgLine = select(lineRef.current);\n    const myLine = line()\n    .x((value, index) => index * 20) // x좌표 50단위로 증가\n    .y((value) => 150 - value) // y좌표값이 좌하단부터 시작하도록 조정\n    .curve(curveCardinal);\n    //  그래프 스타일 설정. curvecardinal: 점과 점 곡선으로 부드럽게 처리됨(디폴트는 직선 꺾은선 그래프 모양)\n  \n  \n  /* 위 까지는 세팅 단계, 이제 그래프를 그려줘면 됨,\n  svgLine변수의 \n  <path>태그를 선택하고 -> lineData와 바인딩 해줌 -> path태그에서 좌표값을 담는 속성인\n  \"d\"에 콜백함수를 이용해 위에서 만든 line메소드를 불러옴\n  위에 myLine 이름으로 line 메소드에 데이터 value를 가져와 x,y좌표값을 어떻게 계산할지 &\n  그래프 스타일은 어떻게 할지 미리 정의했으니 이제 불러오기만 하면 됨 */\n\n  svgLine                   //d3.saelect(\"svg\")\n    .selectAll(\"path\")      // svg안의 path태그 선택해서\n    .data([lineData])       // 데이터와 바인딩해줌\n    .join(\"path\")           // enter, update, exit  통합관리.\n    .attr(\"d\", (value) => myLine(value))\n      //path태그의 속성인 d(좌표값) -> 콜백함수로 line메소드 통채로 부름(x,y 계산식 포함된)\n\n      .attr(\"fill\", \"none\")   //채우기 없음\n      .attr(\"stroke\", \"blue\");  //선색상 파란색\n      \n}, [lineData]);\n\n//데이터 변경 시 잘 적용되는지 테스트를 위해 증감 버튼 생성\n\nconst addData = () => {\n  setLineData(lineData.map((d) => d + 10));\n};\nconst subsData = () => {\n  setLineData(lineData.map((d) => d - 10));\n};\nreturn (\n  <React.Fragment>\n    <svg id=\"a7\" ref = {lineRef}></svg>\n    <br />\n    <br />\n    <br />\n    <br />\n    <button onClick={addData}>add 10 to data</button>\n    <button onClick={subsData}>subtract 10 to data</button>\n  </React.Fragment>\n);\n};\n\nexport default Line1;","import React, {useRef, useEffect, useState} from \"react\";\nimport {select, line, curveCardinal, axisBottom, axisRight ,scaleLinear, selectAll } from \"d3\";\nimport \"./Line2.css\";\nimport { svg } from \"d3\";\n\n  function Line2\n(){\n    const [data, setData] = useState([0, 30, 50, 70, 120, 200, 210, 180, 290, 101, 200, 390]);\n    const svgRef = useRef();\n    \n   useEffect(() => {\n      const svg = select(svgRef.current);\n      const xScale = scaleLinear()\n      .domain([0,data.length -1])\n      .range([0,600]);\n\n    const yScale = scaleLinear()\n     .domain([0,400])\n     .range([400, 0]);\n\n     const xAxis = axisBottom(xScale)\n      .ticks(data.length)\n      .tickFormat(index => index +1);\n     svg\n      .select(\".x-axis\")\n      .style(\"transform\", \"translateY(400px)\")\n      .call(xAxis);        //xaxis(svg,select(\"x-axis\"))\n\n     const yAxis = axisRight(yScale); \n\n     svg\n     .select(\".y-axis\")\n     .style(\"transform\", \"translateX(600px)\")\n     .call(yAxis);        //xaxis(svg,select(\"x-axis\"))\n\n    const myLine = line()\n      .x((value, index) => xScale(index))\n      .y(yScale)\n      .curve(curveCardinal);\n\n      svg\n      .selectAll(\".line\")\n      .data([data])\n      .join(\"path\")\n      .attr(\"class\", \"line\")\n      .attr(\"d\", myLine)\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"blue\"); \n    }, [data]);\n  \n     \n  return(\n  <React.Fragment>\n  <svg id=\"a8\" ref={svgRef}>\n    <g className=\"x-axis\" />\n    <g className=\"y-axis\" />\n  </svg>\n    <br />\n    <br />\n    <br />\n    <button onClick={() => setData(data.map(value => value + 5))}>up - 5</button>\n    <button onClick={() => setData(data.map(value => value - 5))}>down - 5</button>\n    <button onClick={() => setData(data.filter(value => 400-value > 200))}>remove fillter for 200 up</button>\n  </React.Fragment>\n  )\n}\n\nexport default Line2;","import React, { useRef, useEffect, useState } from \"react\";\nimport './Line3.css'\nimport * as d3 from \"d3\";\n\nfunction Line3(){\n  const [data]= useState([25, 50, 35, 15, 94, 10]);\n  const svgRef = useRef();\n\n  useEffect(() => {\n    // setting up svg\n    const w = 400;\n    const h = 100;\n    const svg = d3.select(svgRef.current)\n      .attr('width', w)\n      .attr('height', h)\n      .style('background', '#d3d3d3')\n      .style('margin-top', '50')\n      .style('overflow', 'visible');\n\n    //setting the scaling\n    const xScale = d3.scaleLinear()\n      .domain([0, data.length -1])\n      .range([0, w]);\n\n    const yScale = d3.scaleLinear()\n      .domain([0, h])\n      .range([h, 0]);\n      \n    const generateScaledLine = d3.line()\n      .x((d,i) => xScale(i))\n      .y(yScale)\n      .curve(d3.curveCardinal);\n\n    //setting the axis\n    const xAxis = d3.axisBottom(xScale)\n      .ticks(data.length)\n      .tickFormat(i => i+1);\n\n    const yAxis = d3.axisLeft(yScale)\n      .ticks('5');\n     \n     svg.append('g')\n      .call(xAxis)\n      .attr('transform', `translate(0, ${h})`)\n      \n      svg.append('g')\n        .call(yAxis); \n    //setting up the data for the svg\n\n    svg.selectAll('.line') \n      .data([data])\n      .join('path')\n        .attr('d', d => generateScaledLine(d))\n        .attr('fill', 'none')\n        .attr('stroke', 'black');\n  }, [data]);\n\n  return (\n    <div className=\"App\">\n      <svg id=\"a9\" ref={svgRef}></svg>\n    </div>\n  );\n}\n\nexport default Line3;","enum ColorsEnum {\n  black = \"black\",\n  label_main = \"label_main\",\n  label_sub = \"label_sub\",\n  label_third = \"label_third\",\n  stroke = \"stroke\",\n  background_main = \"background_main\",\n  background_sub = \"background_sub\",\n  primary = \"primary\",\n  red = \"red\",\n  yellow = \"yellow\",\n  green = \"green\",\n  blue = \"blue\",\n  blue2 = \"blue2\",\n  purple = \"purple\",\n  white = \"white\",\n}\n\nexport const Colors: { [key in ColorsEnum]: string } = {\n  black: \"#1e2433\",\n  label_main: \"#434a5e\",\n  label_sub: \"#6c738a\",\n  label_third: \"#9da9be\",\n  stroke: \"#d4d8df\",\n  background_main: \"#efeff3\",\n  background_sub: \"#f4f5f8\",\n  primary: \"#5f6fd9\",\n  red: \"#f25858\",\n  yellow: \"#ffa200\",\n  green: \"#0fd50f\",\n  blue: \"#2867e5\",\n  blue2: \"#3672ff\",\n  purple: \"#7932f3\",\n  white: \"#fff\",\n};\n\nexport enum ColorThemeEnum {\n  primary = \"primary\",\n  secondary = \"secondary\",\n}\nexport type ColorThemeType = ColorThemeEnum | keyof typeof ColorThemeEnum;\nexport const ColorThemes: { [key in ColorThemeType]: string } = {\n  primary: Colors.blue,\n  secondary: Colors.yellow,\n};\n","import * as d3 from 'd3';\nimport React, { useRef, useEffect, useState } from \"react\";\n\nconst Line4 = () => {\n    useEffect(() => {\n        makeGraph();\n    }, []);\n\n    const makeGraph = () =>{\n        //setting convas\n        const w = 400;\n        const h = 400;\n        const margin = {top : 40, left: 40, bottom: 40, right: 40};\n\n        const svg = d3.select('body').append('svg').attr('width', w).attr('height', h);\n\n        //data\n        const data = [\n            { month: '1월', value: 40, color: 'red'},\n            { month: '2월', value: 10, color: 'orange'},\n            { month: '3월', value: 60, color: 'yellow'},\n            { month: '4월', value: 85, color: 'green'},\n            { month: '5월', value: 30, color: 'blue'},\n            { month: '6월', value: 59, color: 'indigo'},\n        ];\n\n        //setting axis\n        const x = d3\n            .scaleBand()\n            .domain(data.map((d) => d.month))\n            .range([margin.left, w - margin.right]);\n\n        const y = d3\n            .scaleLinear()\n            .domain([0, d3.max(data, (d) => d.value)])\n            .nice()\n            .range([h - margin.bottom, margin.top]);\n\n        const xAxis = (g) => {\n            return g\n                .attr('transfrom', `translate(0, ${h})`)\n                .attr('transform', `translate(0, ${h - margin.bottom})`)\n                .call(d3.axisBottom.rickSizeOuter(0));\n        };\n\n        const yAxis = (g) => \n        g\n            .attr('transform', `translate(${margin.left}, 0)`)\n            .call(d3.axisLeft(y).tickValues([0, 20, 40, 60, 80, 100]).tickSize(-w))\n            .call((g) => g.select('.doomain').remove())\n            .attr('class', 'grid');\n\n            //appley axis to canvas\n\n        svg.append('g').call(xAxis);\n        svg.append('g').call(yAxis);\n\n        svg\n            .append('g')\n            .selectAll('rect')\n            .data(data)\n            .enter()\n            .append('rect')\n            .attr('x', (data) => x(data.month) + x.bandwidth() / 2 - 10)\n            .attr('y', (data) => y(data.value))\n            .attr('width', 20)\n            .attr('height', (data) => y(0) - y(data.value))\n            .attr('class', 'bar-chart')\n            .attr('fill', (data)=> data.color);\n\n        const line = d3\n            .line()\n            .x((d) => x(d.month) + x.bandwidth() /2)\n            .y((d) => y(d.value));\n\n        svg\n            .appen('path')\n            .datum(data)\n            .attr('fill', 'none')       //라인 안쪽 채울 것 인지\n            .attr('stroke', 'red')      //라인 색\n            .attr('stroke-width', 2)    //라인 굵기\n            .attr('d', line);\n\n        svg\n            .append('g')\n            .selectAll('text')\n            .data(data)\n            .enter()\n            .append('text')\n            .text((d) => d.value)\n            .attr('x', (data) => x(data.month) + x.bandwidth() / 2)\n            .attr('y', (data) => y(data.value) -5)\n            .attr('fill', 'black')\n            .attr('font-family', 'Tahoma')\n            .attr('font-size', '12px')\n            .attr('text-anchor', 'moddle');\n    };\n\n    return <></>;\n};\n\nexport default Line4;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as d3 from \"d3\";\n\n//Set basic chart variables\n\nconst margin = { top: 40, right: 80, bottom: 60, left: 50 },\n    width = 960 - margin.left - margin.right,\n    height = 280 - margin.top - margin.bottom,\n    color = \"OrangeRed\";\n\n//Create the Line5() function\n\nconst Line5 = () => {\n    const [activeIndex, setActiveIndex] = React.useState(null),\n    [data, setData] = React.useState([]);\n\n\n// Import data\n\nReact.useEffect(() => {\n  d3.csv(\"/usd-2020.csv\").then((d) => {\n      d = d.reverse();\n      const parseDate = d3.timeParse(\"%m/%d/%Y\");\n      d.forEach((i) => {\n          i.date = parseDate(i.date);\n          i.price = Number(i.price);\n      });\n      setData(d);\n    });\n    return () => undefined;\n}, []);\n\nconst yMinValue = d3.min(data, (d) => d.price),\n    yMaxValue = d3.max(data, (d) => d.price);\n\n    const getX = d3\n    .scaleTime()\n    .domain(d3.extent(data, (d) => d.date))\n    .range([0, width]);\n\nconst getY = d3\n    .scaleLinear()\n    .domain([yMinValue - 1, yMaxValue + 2])\n    .range([height, 0]);\n\nconst getXAxis = (ref) => {\n    const xAxis = d3.axisBottom(getX);\n    d3.select(ref).call(xAxis.tickFormat(d3.timeFormat(\"%b\")));\n};\n\nconst getYAxis = (ref) => {\n    const yAxis = d3.axisLeft(getY).tickSize(-width).tickPadding(7);\n    d3.select(ref).call(yAxis);\n};\n\nconst linePath = d3\n    .line()\n    .x((d) => getX(d.date))\n    .y((d) => getY(d.price))\n    .curve(d3.curveMonotoneX)(data);\n\nconst areaPath = d3\n    .area()\n    .x((d) => getX(d.date))\n    .y0((d) => getY(d.price))\n    .y1(() => getY(yMinValue - 1))\n    .curve(d3.curveMonotoneX)(data);\n    \n\n                \nconst handleMouseMove = (e) => {\n  const bisect = d3.bisector((d) => d.date).left,\n      x0 = getX.invert(d3.pointer(e, this)[0]),\n      index = bisect(data, x0, 1);\n  setActiveIndex(index);\n};\n\nconst handleMouseLeave = () => {\n  setActiveIndex(null);\n};\n\nreturn (\n  <div className=\"wrapper\">\n      <svg\n          viewBox={`0 0 ${width + margin.left + margin.right} \n                          ${height + margin.top + margin.bottom}`}\n          onMouseMove={handleMouseMove}\n          onMouseLeave={handleMouseLeave}\n      >\n        // x- and y-axes\n          <g className=\"axis\" ref={getYAxis} />\n          <g\n              className=\"axis xAxis\"\n              ref={getXAxis}\n              transform={`translate(0,${height})`}\n          />\n        // area and line paths\n          <path fill={color} d={areaPath} opacity={0.3} />\n          <path strokeWidth={3} fill=\"none\" stroke={color} d={linePath} />\n        // y-axis label\n          <text\n              transform={\"rotate(-90)\"}\n              x={0 - height / 2} y={0 - margin.left} dy=\"1em\">\n              {\"USD\"}\n          </text>\n        // chart title\n          <text\n              x={width / 2} y={0 - margin.top / 2} text-anchor=\"middle\" >\n              {\"USD to RUB Exchange Rates, 2020\"}\n          </text>\n        // chart subtitle\n          <a\n              className=\"subtitle\"\n              href=\"https://www.moex.com/ru/index/rtsusdcur.aspx?tid=2552\"\n              target=\"_blank\">\n              <text x=\"0\" y={height + 50}>\n                  {\"Source: Moscow Exchange\"}\n              </text>\n          </a>\n\n          {data.map((item, index) => {\n              return (\n                  <g key={index}>\n                  // hovering text \n                      <text\n                          fill=\"#666\"\n                          x={getX(item.date)}\n                          y={getY(item.price) - 20}\n                          textAnchor=\"middle\"\n                      >\n                          {index === activeIndex ? item.price : \"\"}\n                      </text>\n                     // hovering circle\n                      <circle\n                          cx={getX(item.date)}\n                          cy={getY(item.price)}\n                          r={index === activeIndex ? 6 : 4}\n                          fill={color}\n                          strokeWidth={index === activeIndex ? 2 : 0}\n                          stroke=\"#fff\"\n                          style={{ transition: \"ease-out .1s\" }}\n                      />\n                  </g>\n              );\n          })}\n      </svg>\n  </div>\n);\n}\n\nexport default Line5;","import React, { useRef, useEffect, useState } from \"react\";\nimport * as d3 from \"d3\";\n\n  const data = [\n    {property : 'a', value : 4 },\n    {property : 'b', value : 3 },\n    {property : 'c', value : 100 },\n    {property : 'd', value : 2 },\n    {property : 'e', value : 8 }\n  ];\n  \n  const Pie1 = () => {\n    const pieChart = useRef()\n\n    useEffect(() => {\n      \n      const pieData = d3.pie().value(d => d.value)(data)\n      \n      const arc = d3.arc().innerRadius(0).outerRadius(200)\n\n      const colors = d3.scaleOrdinal().range(d3.schemeSet2);\n      \n      const svg = d3.select(pieChart.current)\n                        .attr('width', 600)\n                        .attr('height', 600)\n                        .style('background-color', 'tomatos')\n                        .append('g')\n                          .attr('transform', 'translate(300,300)')\n\n\n        const tooldiv = d3.select('#chartArea')\n          .append('div')\n          .style('visibilty', 'hidden')\n          .style('position', 'absolute')\n          .style('background-color', 'red') \n          .style('color', 'white')\n          .style('font-size', '40px')\n          .style('padding', '10px')\n          \n\n\n        svg.append('g')\n          .selectAll('path')\n          .data(pieData)\n          .join('path')\n            .attr('d', arc)\n            .attr('fill', (d,i)=>colors(i))\n            .attr('stroke', 'white')\n            .on('mouseover', (e,d)=>{\n              tooldiv.style('visibility','visible')\n                    .text(`${d.data.property}:` + `${d.data.value}`) \n              })\n              .on('mousemove', (e,d)=>{\n                tooldiv.style('top', (e.pageY-50) + 'px')\n                .style('left', (e.pageX-50) + 'px')\n              })\n              .on('mouseout', ()=>{\n                tooldiv.style('visibility', 'hidden')\n              })\n              \n      \n\n       \n    })\n    \n   \n  return (\n    <div id='chartArea'>\n      <svg ref={pieChart}></svg>\n    </div>\n  );\n}\n\nexport default Pie1;","\n   \nimport { useEffect, useState } from \"react\";\nimport ResizeObserver from \"resize-observer-polyfill\";\n\n/**\n * Hook, that returns the current dimensions of an HTML element.\n * Doesn't play well with SVG.\n */\n\nconst useResizeObserver = ref => {\n  const [dimensions, setDimensions] = useState(null);\n  useEffect(() => {\n    const observeTarget = ref.current;\n    const resizeObserver = new ResizeObserver(entries => {\n      entries.forEach(entry => {\n        setDimensions(entry.contentRect);\n      });\n    });\n    resizeObserver.observe(observeTarget);\n    return () => {\n      resizeObserver.unobserve(observeTarget);\n    };\n  }, [ref]);\n  return dimensions;\n};\n\nexport default useResizeObserver;","import React, { useRef, useEffect, useState } from \"react\";\nimport { select, axisBottom, axisLeft, max, scaleLinear, scaleBand, line, least, scaleDiverging, path, tickFormat, text } from \"d3\";\nimport useResizeObserver from \"./useResizeObserver\";\nimport { Colors } from \"./color.type.ts\";\nimport * as d3 from \"d3\";\n\n//해야할 일 : tooltip 이쁘게 만들기\n// 사각형 이쁘게 만들기\n// 높이에 따른 색상 다시 조정\n// yaxis  바꾸기\n\nconst region = ([\"서울\", \"경기\", \"인천\", \"대구\", \"부산\", \"경남\", \"경북\", \"충남\", \"충북\", \"전남\", \"전북\", \"광주\", \"울산\", \"세종\", \"제주\"]);\n  \nfunction BarChart_TBA1({data}) {\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n  \n\n  // will be called initially and on every data change\n  useEffect(() => {\n    const svg = select(svgRef.current); \n    if(!dimensions) return;\n\n    const { width, height } =\n      dimensions || wrapperRef.current.getBoundingClientRect();\n\n      const extend = [\n        0, \n        max(data, index => max(data)*1.1)\n      ]\n      // scales\n    const xScale = scaleBand()      //끝 둥글게 하기\n      .domain(data.map((value, index) => region[index] ))\n      .range([0, width]) \n      .paddingInner(0.5);     \n    \n      \n    const yScale = scaleLinear()\n      //.domain([0,d3.max(data.map(function(d){return d.data}))])   \n      .domain(extend)                      //데이터 크기에 맞춰 최대값 설정\n      .range([height, 0]);   \n\n    \n      svg.selectAll(\"line.y\")\n        .data(yScale.ticks(7))\n        .enter().append(\"line\")\n        .attr(\"class\", \"y\")\n        .attr(\"x2\", width)\n        .attr(\"y1\", yScale)\n        .attr(\"y2\", yScale)\n        .style(\"stroke\", \"#ccc\")\n        .style(\"stroke-dasharray\", \"5, 5\");\n      \n      svg.select(\".y\")\n        .style(\"stroke-dasharray\", \"0\");   //첫 라인 stroke 없애기.\n    \n      // create x-axis\n      const xAxis = axisBottom(xScale).ticks(data.length);\n    \n       svg.select(\".x-axis\") \n        .style(\"transform\", `translateY(${height}px)`)\n        .style(\"opacity\", \"0.5\")\n        .call(xAxis)\n        .call(g => g.select(\".domain\").remove())\n        //.call(g => g.selectAll(\".tick line\").remove());\n\n        // create y-axis\n       const yAxis = axisLeft(yScale);\n    \n       svg\n        .select(\".y-axis\")\n        .call(yAxis)       \n        .call(g => g.select(\".domain\").remove())\n        .call(g => g.selectAll(\".tick line\").remove());\n      \n      \n      svg\n      .selectAll(\".y-axis\")\n      .selectAll(\"text\")\n      .style(\"opacity\", \"0.5\")\n      .text(function(d) {return d/1000+\"k\"})\n      \n     \n      svg\n     .selectAll(\".x-axis .tick line\")\n     .style(\"opacity\", \"0.5\")\n      //.text(\"k\")\n    // draw the bars\n    const a = svg.append('linearGradient')\n              .attr('x1', '0.5')\n              .attr('x2', '0.5')\n              .attr('y1', '0')\n              .attr('y2', '1')\n              .attr(\"gradientUnits\", \"objectBoundingBox\")\n              .attr('id', 'a');\n\n      a.append('stop')\n      .attr('offset', '0')\n      .attr('stop-color', '#af21e1');\n\n      a.append('stop')\n      .attr('offset', '1')\n      .attr('stop-color', '#6539fb');\n\n\n\n      \n    svg\n      .selectAll(\".bar\")\n      .data(data)\n      .join(\"rect\")\n      .attr(\"class\", \"bar\")\n      .style(\"transform\", \"scale(1, -1)\")\n      .attr(\"x\", (value, index) => xScale(region[index]))\n      .attr(\"y\", -dimensions.height)\n      .attr(\"rx\", 4)\n      .attr(\"width\", xScale.bandwidth())\n      // .on(\"mouseenter\", (event, value) =>  {\n      //   // events have changed in d3 v6:\n      //   // https://observablehq.com/@d3/d3v6-migration-guide#events\n      //   const index = svg.selectAll(\".bar\").nodes().indexOf(event.target);\n\n      //   svg\n      //     .selectAll(\".tooltip\")\n      //     .data( [value] )\n      //     .join((enter) => enter.append(\"text\").attr(\"y\", yScale(value) - 4))\n      //     .attr(\"class\", \"tooltip\")\n      //     .style('visibility','visible')\n      //     //.text(region[index] + \": \" + value + \"명\")\n      //     .append('tspan')\n      //     .text(region[index])\n      //     .append('tspan')\n      //     .text(\": \" + value + \"명\")\n      //     .attr(\"x\", xScale(region[index]) + xScale.bandwidth() / 2)\n      //     .attr(\"text-anchor\", \"middle\")\n      //     .transition()\n      //     .attr(\"y\", yScale(value) - 8)\n      //     .attr(\"opacity\", 1)\n      //   })\n        .on('mouseenter', (e,d)=>{\n          const cn1 = d.toString()\n            .replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\");\n          const index = svg.selectAll(\".bar\").nodes().indexOf(e.target);\n          \n          const startX = document.getElementById('start__'); // 요소의 id 값이 target이라 가정\n      \n           const clientRect = startX.getBoundingClientRect(); // DomRect 구하기 (각종 좌표값이 들어있는 객체)\n           const startXval = clientRect.left; // Viewport의 시작지점을 기준으로한 상대좌표 X 값.\n          \n          const marginLeft_ = window.pageXOffset + startX.getBoundingClientRect().left;\n          const marginTop_ = window.pageYOffset + startX.getBoundingClientRect().top;\n          //console.log(marginLeft_)\n          const ax = parseInt(xScale(region[index]))-parseInt(marginLeft_)-(xScale.bandwidth()/2);\n          console.log(yScale(d))\n          const ay = -80+yScale(d)\n          //console.log(parseInt(ax))\n          \n          tooldiv\n          .html(`<div style='margin-top: 10%'>${region[index]}:<span id='tba1' style='color:#7932F3 ; font-weight:bolder ;'>${cn1}</span>명</div>`)\n          .style(\"opacity\", 1)\n          .style('transform', `translate( ${ax}px , ${ay}px )` )\n           .style('font-family', \"NotoSansCJKkr-Regular, Noto Sans CJK KR\")\n              .style('font-size', '14px')\n              .style('font-weight' ,'500')\n              .style('width', `${width/5.6}px`)\n              .style('height', `${width/15}px`)\n              .style('border', '1px solid #D4D8DF')\n              .style('border-radius', '5.5%')\n              .style('vertical-align', 'middle')\n              .style('justify-content', 'center')\n          \n        })\n        // .on('mousemove', (e,d)=>{\n        //   const index = svg.selectAll(\".bar\").nodes().indexOf(e.target);\n        //   tooldiv\n        //   .style('top', (e.pageY-50)+'px')\n        //   .style('left', (e.pageX-50)+'px')\n        //      //.style('position', (`xScale(region[index]) + xScale.bandwidth() / 2, (yScale(d.value)-4)`))\n        // })\n        .on('mouseleave', (e,d)=>{\n          tooldiv\t\t\n                .style(\"opacity\", 0);\t\n        })\n      .transition()\n      .attr('fill', 'url(#a)')\n      .attr(\"height\", (value) => dimensions.height - yScale(value))\n      \n      \n\n     \n      const tooldiv = d3.select('#test')\n              .append('div')\n              .attr('id', 'tba2')\n              .style('opacity', '0')\n              .style('position', 'fixed')\n              .style('background-color', 'white')\n              .style('overflow', 'visible')\n              //.style('font-family', \"NotoSansCJKkr-Regular, Noto Sans CJK KR\")\n              //.style('font-size', '14px')\n              //.style('font-weight' ,'500')\n              //.style('width', `${width/5.6}px`)\n              //.style('height', `${width/15}px`)\n              //.style('border', '1px solid #D4D8DF')\n              //.style('border-radius', '5.5%')\n              //.style('vertical-align', 'middle')\n              //.style('justify-content', 'center')\n              \n             // fill=\"#6c738a\" font-size=\"14\" font-family=\"NotoSansCJKkr-Regular, Noto Sans CJK KR\"\n     \n           \n\n\n  }, [data, dimensions]);\n\n  return (\n\n\n    <React.Fragment>\n     \n     <div   ref={wrapperRef} style={{marginBottom: \"2rem\"}}>\n       <div id='test'></div>\n        <svg id='start__' ref={svgRef}>\n          <g className=\"x-axis\" />\n          <g className=\"y-axis\" />\n        </svg>\n      </div>\n        \n      \n    </React.Fragment>\n  );\n} \n\nexport default BarChart_TBA1;","import React, { useState } from \"react\";\nimport \"./TBA1.css\";\nimport BarChart_TBA1 from \"./BarChart_TBA1\";\n//1134\nfunction TBA1() {\n   // const data1= [23230, 30240, 62305, 66039, 20594,15928, 59604, 79472, 52938, 28395, 19383, 58493, 38295, 66666, 37591]\n  const [data, setData] = useState([133230, 30240, 62305, 66039, 20594,15928, 59604, 79472, 52938, 28395, 19383, 58493, 38295, 66666, 37591]);\n  /*\n  const [data, setData] = useState([ data1[0]/1000,\n                                     data1[1]/1000, \n                                     data1[2]/1000, \n                                     data1[3]/1000, \n                                     data1[4]/1000, \n                                     data1[5]/1000, \n                                     data1[6]/1000, \n                                     data1[7]/1000,\n                                     data1[8]/1000,\n                                     data1[9]/1000,\n                                     data1[10]/1000,\n                                     data1[11]/1000,\n                                     data1[12]/1000,\n                                     data1[13]/1000,\n                                     data1[14]/1000\n                                ]);\n                                */\n                                \n  return (\n    <React.Fragment>\n\n        <div id=\"#BarChart_TBA1_div\" style={{display: \"flex\", justifyContent: \"space-between\", margin: \"0 -2% 5% -5%\", opacity: \"0.7\",fontSize: \"14px\"}}> \n            <div> 방문 여행객 거주지 그래프</div>\n            \n            <div id=\"checkDataDate\" style={{opacity: \"0.5\"}}>\n              <button>오늘</button>\n              <button>7일</button>\n              <button>15일</button>\n              <button>한달</button>\n              <button>1년</button>\n            </div>\n          </div>\n      <BarChart_TBA1 data={data} />\n     \n    </React.Fragment>\n  );\n}\n\nexport default TBA1;","import React, { useEffect, useRef, useState } from \"react\";\nimport {\n  select,\n  scaleBand,\n  axisBottom,\n  stack,\n  max,\n  scaleLinear,\n  axisLeft,\n  stackOrderAscending\n} from \"d3\";\nimport * as d3 from \"d3\";\nimport useResizeObserver from \"./useResizeObserver\";\n\nfunction StackChart_TBA2({ data, keys, colors }) {\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n\n  // will be called initially and on every data change\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    \n    if(!dimensions) return;\n    \n    const { width, height } =\n      dimensions || wrapperRef.current.getBoundingClientRect();\n\n    // stacks / layers\n    const stackGenerator = stack()\n      .keys(keys)\n      .order(stackOrderAscending);\n    const layers = stackGenerator(data);\n    const extent = [\n      0,\n      max(layers, layer => max(layer, sequence => sequence[1]/1000*1.1))\n    ];\n\n\n    // scales\n    const xScale = scaleBand()\n      .domain(data.map(d => d.year))\n      .range([0, width])\n      .paddingInner(0.5);\n\n    const yScale = scaleLinear()\n      .domain(extent)\n      .range([height, 0]);\n\n      svg.selectAll(\"line.y\")\n      .data(yScale.ticks(7))\n      .enter().append(\"line\")\n      .attr(\"class\", \"y\")\n      .attr(\"x1\", 0)\n      .attr(\"x2\", width)\n      .attr(\"y1\", yScale)\n      .attr(\"y2\", yScale)\n      .style(\"stroke\", \"#ccc\")\n      .style(\"stroke-dasharray\", \"2, 2\");\n      \n      svg.select(\".y\")\n      .style(\"stroke-dasharray\", \"0\");   //첫 라인 stroke 없애기.\n     \n    // rendering\n    svg\n      .selectAll(\".layer\")\n      .data(layers)\n      .join(\"g\")\n      .attr(\"class\", \"layer\")\n      .attr(\"fill\", layer => colors[layer.key])\n      .selectAll(\"rect\")\n      .data(layer => layer)\n      .join(\"rect\")\n      .attr(\"x\", sequence => xScale(sequence.data.year))\n      .attr(\"width\", xScale.bandwidth())\n      .attr(\"y\", sequence => yScale(sequence[1]/1000))\n      .attr(\"height\", sequence => yScale(sequence[0]/1000) - yScale(sequence[1]/1000))\n      .on('mouseenter', (e,d)=>{\n       \n          const cn1 = d.data.먹거리.toString()\n          .replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\");\n          const cn2 = d.data.관광지.toString()\n          .replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\");\n          const cn3 = d.data.숙박.toString()\n          .replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\");\n       \n        // const startX = document.getElementById('start__'); // 요소의 id 값이 target이라 가정\n        // const clientRect = startX.getBoundingClientRect(); // DomRect 구하기 (각종 좌표값이 들어있는 객체)\n        // const startXval = clientRect.left; // Viewport의 시작지점을 기준으로한 상대좌표 X 값.\n        // const marginLeft_ = window.pageXOffset + startX.getBoundingClientRect().left;\n        // const marginTop_ = window.pageYOffset + startX.getBoundingClientRect().top;\n        // const ax = parseInt(xScale(d.data.year))-parseInt(marginLeft_)-(xScale.bandwidth()/2);\n       // console.log(parseInt(xScale(d.data.year)))\n        //const ay = 20\n        //console.log(ay)\n        //console.log(ay/1000)\n        tooldiv\n        .html(`<div style='text-align:left; height: 50px; '>\n                  <div>\n                      <span style='color: #3478ff;'>먹거리</span>: &nbsp; &nbsp;${cn1}회\n                  </div>\n                  <div>\n                      <span style='color: #2ebfff;'>관광지</span>: &nbsp; &nbsp;${cn2}회\n                  </div>\n                  <div>\n                      <span style='color: #c96bff;'>숙박</span>: &nbsp; &nbsp;${cn3}회\n                  </div>\n              </div> `)\n        .style(\"opacity\", 1)\n        //.style('transform', `translate( ${ax}px , ${ay}px )` )\n        .attr('x', (e.pageY-50)+'px')\n        .attr('y', (e.pageY-50)+'px')\n        .style('font-family', \"NotoSansCJKkr-Regular, Noto Sans CJK KR\")\n        .style('font-size', '14px')\n        .style('font-weight' ,'400')\n        .style('width', `${width/5.6}px`)\n        .style('height', `${width/7}px`)\n        .style('border', '1px solid #D4D8DF')\n        .style('border-radius', '5.5%')\n        .style('vertical-align', 'middle')\n        .style('justify-content', 'center')\n      })\n      .on('mouseleave', (e,d)=>{\n        tooldiv\t\t\n              .style(\"opacity\", 0);\t\n      })\n     \n        \n    \n\n   \n    const tooldiv = d3.select('#test')\n            .append('div')\n            .attr('id', 'tba2')\n            .style('opacity', '0')\n            .style('position', 'absolute')\n            .style('background-color', 'white')\n            .style('overflow', 'visible')\n     \n\n\n    // axes\n    const xAxis = axisBottom(xScale);\n    svg\n      .select(\".x-axis\")\n      .style(\"opacity\", \"0.5\")\n      .attr(\"transform\", `translate(0, ${height})`)\n      .call(xAxis)\n      .call(g => g.select(\".domain\").remove());\n\n    const yAxis = axisLeft(yScale);\n    svg.select(\".y-axis\")\n       .call(yAxis)\n       .call(g => g.select(\".domain\").remove())\n       .call(g => g.selectAll(\".tick line\").remove());\n\n       svg\n      .selectAll(\".y-axis\")\n      .selectAll(\"text\")\n      .style(\"opacity\", \"0.5\")\n      .text(function(d) {return d+\"k\"})\n    \n  }, [colors, data, dimensions, keys]);\n\n  return (\n    <React.Fragment>\n      <div ref={wrapperRef} style={{ marginBottom: \"2rem\" }}>\n      <div id='test'></div>\n        <svg id='start__' ref={svgRef}>\n          <g className=\"x-axis\" />\n          <g className=\"y-axis\" />\n        </svg>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default StackChart_TBA2;","import React, { useState } from \"react\";\nimport \"./TBA2.css\";\nimport StackChart_TBA2 from \"./StackChart_TBA2\";\n\nconst data = [\n  {\n    year: \"1일\",\n    \"먹거리\": 15293,\n    \"관광지\": 22415,\n    \"숙박\": 32523\n  },\n  {\n    year: \"2일\",\n    \"먹거리\": 10315,\n    \"관광지\": 23240,\n    \"숙박\": 12530\n  },\n  {\n    year: \"3일\",\n    \"먹거리\": 64310,\n    \"관광지\": 63220,\n    \"숙박\": 23530\n  },\n  {\n    year: \"4일\",\n    \"먹거리\": 55410,\n    \"관광지\": 53220,\n    \"숙박\": 15630\n  },\n  {\n    year: \"5일\",\n    \"먹거리\": 53610,\n    \"관광지\": 43320,\n    \"숙박\": 77530\n  },\n  {\n    year: \"6일\",\n    \"먹거리\": 23510,\n    \"관광지\": 43720,\n    \"숙박\": 26730\n  },\n  {\n    year: \"7일\",\n    \"먹거리\": 37410,\n    \"관광지\": 72320,\n    \"숙박\": 26730\n  },\n  {\n    year: \"8일\",\n    \"먹거리\": 64710,\n    \"관광지\": 33320,\n    \"숙박\": 54730\n  },\n  {\n    year: \"9일\",\n    \"먹거리\": 34710,\n    \"관광지\": 35320,\n    \"숙박\": 34730\n  },\n  {\n    year: \"10일\",\n    \"먹거리\": 26110,\n    \"관광지\": 67320,\n    \"숙박\": 26130\n  },\n  {\n    year: \"11일\",\n    \"먹거리\": 23610,\n    \"관광지\": 27310,\n    \"숙박\": 27530\n  },\n  {\n    year: \"12일\",\n    \"먹거리\": 23710,\n    \"관광지\": 28640,\n    \"숙박\": 25830\n  },\n  {\n    year: \"13일\",\n    \"먹거리\": 47310,\n    \"관광지\": 22460,\n    \"숙박\": 75430\n  },\n  {\n    year: \"14일\",\n    \"먹거리\": 23510,\n    \"관광지\": 32520,\n    \"숙박\": 23530\n  },\n  {\n    year: \"15일\",\n    \"먹거리\": 75510,\n    \"관광지\": 57420,\n    \"숙박\": 37830\n  },\n];\n\nconst allKeys = [\"먹거리\", \"관광지\", \"숙박\"];\n\nconst colors = {\n  \"먹거리\": \"#3478FF\",\n  \"관광지\": \"#2EBFFF\",\n  \"숙박\": \"#C96BFF\"\n};\n\nfunction TBA2() {\n  const [keys, setKeys] = useState(allKeys);\n  return (\n    <React.Fragment>\n        \n        \n        <div style={{display: \"flex\", marginBottom: \"5%\", justifyContent: \"space-between\", opacity: \"0.7\",fontSize: \"14px\"}}>\n          \n          <div style={{fontSize: \"14px\", marginLeft:\"-5%\" }}> 목적지 검색 건수</div>\n          \n          <div style={{marginLeft:\"-15%\"}}>   \n            <span> <span style={{color:\"#3478FF\"}}>■</span> 먹거리 </span>\n            <span> <span style={{color:\"#2EBFFF\"}}>■</span> 광광지 </span>\n            <span> <span style={{color: \"#C96BFF\"}}>■</span> 숙박 </span>\n          </div>\n\n          <div> \n            \n            \n          <div id=\"checkDataDate\" style={{opacity: \"0.5\" } }>\n              <button>오늘</button>\n              <button>7일</button>\n              <button>15일</button>\n              <button>한달</button>\n              <button>1년</button>\n            </div>\n          </div>\n\n      </div>\n      <StackChart_TBA2 data={data} keys={keys} colors={colors} />\n\n      <div id=\"TBA2_STACK\" className=\"fields\" >\n        {allKeys.map(key => (\n          <div key={key} className=\"field\">\n            <input\n              id={key}\n              type=\"checkbox\"\n              checked={keys.includes(key)}\n              onChange={e => {\n                if (e.target.checked) {\n                  setKeys(Array.from(new Set([...keys, key])));\n                } else {\n                  setKeys(keys.filter(_key => _key !== key));\n                }\n              }}\n            />\n            <label htmlFor={key} style={{ color: colors[key] }}>\n              {key}\n            </label>\n          </div>\n        ))}\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default TBA2;","import * as d3 from \"d3\";\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { area, select, axisBottom, axisLeft, max, scaleLinear,  scaleBand, curveLinear, least, scaleDiverging, path, tickFormat, text } from \"d3\";\nimport useResizeObserver from \"./useResizeObserver\";\nimport { Colors } from \"./color.type.ts\"\n\nfunction LineChart_TBA3({data}) {\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n  // will be called initially and on every data change\n  useEffect(() => {\n    const svg = select(svgRef.current); \n\n    if(!dimensions) return;\n\n    const { width, height } =\n      dimensions || wrapperRef.current.getBoundingClientRect();\n\n     let max1 =max((data.map(d => d.uv * 1.1)));\n     let max2 = max((data.map(d => d.pv * 1.1)));\n     const maxx = max1>max2 ? max1  : max2 ;\n     const extend = [ 0, maxx ]\n      // scales\n\n    const xScale = scaleBand()      //끝 둥글게 하기\n      .domain(data.map(d => d.name ))\n      .range([0, width])\n      .paddingInner(100);     \n    \n    const yScale = scaleLinear()\n      //.domain([0,d3.max(data.map(function(d){return d.data}))])   \n      .domain(extend)                      //데이터 크기에 맞춰 최대값 설정\n      .range([height, 0]);   \n\n      svg.selectAll(\"line.y\")\n        .data(yScale.ticks(7))\n        .enter().append(\"line\")\n        .attr(\"class\", \"y\")\n        .attr(\"x2\", width)\n        .attr(\"y1\", yScale)\n        .attr(\"y2\", yScale)\n        .style(\"stroke\", \"#ccc\")\n        .style(\"stroke-dasharray\", \"5, 5\");\n      \n      svg.select(\".y\")\n        .style(\"stroke-dasharray\", \"0\");   //첫 라인 stroke 없애기.\n    \n      // create x-axis\n      const xAxis = axisBottom(xScale).ticks(data.length);\n\n       svg.select(\".x-axis\") \n        .style(\"transform\", `translateY(${height}px)`)\n        .style(\"opacity\", \"0.5\")\n        .call(xAxis)\n        .call(g => g.select(\".domain\").remove())\n        //.call(g => g.selectAll(\".tick line\").remove());\n\n        // create y-axis\n       const yAxis = axisLeft(yScale);\n    \n       svg\n        .select(\".y-axis\")\n        .call(yAxis)       \n        .call(g => g.select(\".domain\").remove())\n        .call(g => g.selectAll(\".tick line\").remove());\n      \n      svg\n        .selectAll(\".y-axis\")\n        .selectAll(\"text\")\n        .style(\"opacity\", \"0.5\")\n        .text(function(d) {return (d/1000) +\"k\"})\n      \n     svg\n      .selectAll(\".x-axis .tick line\")\n      .style(\"opacity\", \"0.5\")\n  \n     const generateScaledLine1 = d3.line()\n          .curve(d3.curveMonotoneX)\n          .x(function(d) { return xScale(d.name); })\t\n          .y(function(d) { return yScale(d.uv); });\n\n    const generateScaledLine2 = d3.line()\n          .curve(d3.curveMonotoneX)\n          .x(function(d) { return xScale(d.name); })\t\n          .y(function(d) { return yScale(d.pv); });\n\n\n    svg.selectAll('.line') \n        .data([data])\n        .join('path')\n        .attr('d', d => generateScaledLine1(d))\n        .attr('fill', 'none')\n        .attr('stroke-width', '2')\n        .attr('stroke', '#7932F3');\n\n    svg.selectAll('.line') \n        .data([data])\n        .join('path')\n        .attr('d', d => generateScaledLine2(d))\n        .attr('fill', 'none')\n        .attr('stroke-width', '2')\n        .attr('stroke', '#9DA9BE');\n\n\n    const a = svg.append('linearGradient')\n              .attr('x1', '0')\n              .attr('x2', '0')\n              .attr('y1', '0')\n              .attr('y2', '1')\n              .attr('id', 'a');\n\n    a.append('stop')\n              .attr('offset', '5%')\n              .attr('stop-color', '#7932F3')\n              .attr('stop-opacity', '0.5');\n\n    a.append('stop')\n              .attr('offset', '95%')\n              .attr('stop-color', '{Colors.white}')\n              .attr('stop-opacity', '0.01');\n      \n    const b = svg.append('linearGradient')\n              .attr('x1', '0')\n              .attr('x2', '0')\n              .attr('y1', '0')\n              .attr('y2', '1')\n              .attr('id', 'b');\n\n    b.append('stop')\n              .attr('offset', '5%')\n              .attr('stop-color', '#9DA9BE')\n              .attr('stop-opacity', '0.5');\n\n    b.append('stop')\n              .attr('offset', '95%')\n              .attr('stop-color', '{Colors.white}')\n              .attr('stop-opacity', '0.01');\n\n\n    var\tarea = d3.area()\t\n              .curve(d3.curveMonotoneX) //커브\n              .x(function(d) { return xScale(d.name); })\t\n              .y0(height)\t\t\t\t\t\n              .y1(function(d) { return yScale(d.uv); });\n\n    svg.append(\"path\")\n              .data([data]) .attr('d', curveLinear)\n              .attr(\"class\", \"area\")\n              .attr(\"d\", area)\n              .attr('fill', 'url(#a)');\n    \n     var area = d3.area()\t\n              .curve(d3.curveMonotoneX) //커브\n              .x(function(d) { return xScale(d.name); })\t\n              .y0(height)\t\t\t\t\t\n              .y1(function(d) { return yScale(d.pv); });\n\n         svg.append(\"path\")\n              .data([data]) .attr('d', curveLinear)\n              .attr(\"class\", \"area\")\n              .attr(\"d\", area)\n              .attr(\"fill\", \"url(#b)\") \n             .on('mouseover', (e,d)=>{\n                const index = svg.selectAll(\"path\").nodes().indexOf(e.target);\n                const k = d3.select(e.currentTarget)\n                tooldiv.style('visibility', 'visible')\n                .html(`<div>${d[index].name}</div>`)\n              \n            })\n            // .on('mousemove', (e,d)=>{\n            //   tooldiv.style('top', (e.pageY-50)+'px')\n            //          .style('left', (e.pageX-50)+'px')\n            // })\n            // .on('mouseout', (e,d)=>{\n            //   tooldiv.style('visibility', 'hidden')\n            // })\n              \n\n\n\n\nconst bar_width = parseInt(xScale.bandwidth())\nconsole.log(width/data.length/2)\n            \nsvg\n      .selectAll(\".line_\")\n      .data(data)\n      .join(\"rect\")\n      .attr(\"class\", \"line_\")\n      .style(\"transform\", \"scale(1, -1)\")\n      .attr(\"x\", (value, index) => xScale(data[index].name))\n      //.attr(\"y\", dimensions.height)\n      .style(\"width\", width/data.length)\n      .style('height', `${height}`)\n      .style('transform', `translate(-${width/data.length/2}px, 5px)`)\n      \n        .on('mouseenter', (e,d)=>{\n          const cn1 = d.pv.toString()\n            .replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\");\n            const cn2 = d.uv.toString()\n            .replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\");\n          // console.log(cn1)\n          const index = svg.selectAll(\".bar\").nodes().indexOf(e.target);\n          \n          const startX = document.getElementById('start__'); // 요소의 id 값이 target이라 가정\n      \n          const clientRect = startX.getBoundingClientRect(); // DomRect 구하기 (각종 좌표값이 들어있는 객체)\n          const startXval = clientRect.left; // Viewport의 시작지점을 기준으로한 상대좌표 X 값.\n         \n         const marginLeft_ = window.pageXOffset + startX.getBoundingClientRect().left;\n         const marginTop_ = window.pageYOffset + startX.getBoundingClientRect().top;\n         //console.log(marginLeft_)\n    \n         const ax = parseInt(xScale(d.name))-parseInt(marginLeft_)-width/data.length/2\n         console.log(yScale(Math.max(d.uv, d.pv)))\n         const this_max_y = yScale(Math.max(d.uv, d.pv))\n         const ay =  this_max_y - height*1.5\n         //console.log(xScale(d.name));\n        // console.log(ay)\n        //console.log(Math.max(d.uv, d.pv))\n          tooldiv\n          .html(`<div style='text-align:left; height: 50px; '>\n          <div>\n              <span style='color: #7932F3;'>밀양시</span>:&nbsp;${cn1}명\n          </div>\n          <div>\n              <span style='color: #9DA9BE;'>광역평균</span>: &nbsp;${cn2}명\n          </div>\n      </div> `)\n          .style(\"opacity\", 1)\n          //.style('transform', `translate( ${ax}px , ${ay}px )` )\n           .style('font-family', \"NotoSansCJKkr-Regular, Noto Sans CJK KR\")\n              .style('font-size', '13px')\n              .style('font-weight' ,'500')\n              .style('transform', `translate( ${ax}px , ${ay}px )` )\n              .style('width', `${width/6}px`)\n              .style('height', `${width/15}px`)\n              .style('border', '1px solid #D4D8DF')\n              .style('border-radius', '5.5%')\n              .style('vertical-align', 'middle')\n              .style('justify-content', 'center')\n          \n        })\n   \n        .on('mouseleave', (e,d)=>{\n          tooldiv\t\t\n                .style(\"opacity\", 0);\t\n        })\n      .transition()\n      .attr('opacity', '0')\n      \n      \n          \n      const tooldiv = d3.select('#test')\n      .append('div')\n      .attr('id', 'tba2')\n      .style('opacity', '0')\n      .style('position', 'absolute')\n      .style('background-color', 'white')\n      .style('overflow', 'visible')\n\n\n  }, [data, dimensions]);\n\n  return (\n\n\n    <React.Fragment>\n     \n     <div id='test' ref={wrapperRef} style={{marginBottom: \"2rem\"}}>\n        <svg id='start__'ref={svgRef}>\n          <g className=\"x-axis\" />\n          <g className=\"y-axis\" />\n        </svg>\n      </div>\n        \n      \n    </React.Fragment>\n  );\n} \n\nexport default LineChart_TBA3;","/*\n\nimport React, { PureComponent } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\n\nconst data = [\n  {\n    name: '1월',\n    uv: 4000,\n    pv: 2400,\n    amt: 2400,\n  },\n  {\n    name: '2월',\n    uv: 3000,\n    pv: 1398,\n    amt: 2210,\n  },\n  {\n    name: '3월',\n    uv: 2000,\n    pv: 9800,\n    amt: 2290,\n  },\n  {\n    name: '4월',\n    uv: 2780,\n    pv: 3908,\n    amt: 2000,\n  },\n  {\n    name: '5월',\n    uv: 1890,\n    pv: 4800,\n    amt: 2181,\n  },\n  {\n    name: '6월',\n    uv: 2390,\n    pv: 3800,\n    amt: 2500,\n  },\n  {\n    name: '7월',\n    uv: 3490,\n    pv: 4300,\n    amt: 2100,\n  },\n  {\n    name: '8월',\n    uv: 3490,\n    pv: 4300,\n    amt: 2100,\n  },\n  {\n    name: '9월',\n    uv: 3490,\n    pv: 4300,\n    amt: 2100,\n  },\n  {\n    name: '10월',\n    uv: 3490,\n    pv: 4300,\n    amt: 2100,\n  },\n  {\n    name: '11월',\n    uv: 3490,\n    pv: 4300,\n    amt: 2100,\n  },\n  {\n    name: '12월',\n    uv: 3490,\n    pv: 4300,\n    amt: 2100,\n  },\n];\n\nfunction TBA3() {\n    return (\n        <ResponsiveContainer width=\"100%\" aspect={3}>\n          <LineChart\n            width={100000}\n            height={300}\n            data={data}\n            margin={{\n              top: 5,\n              right: 30,\n              left: 20,\n              bottom: 5,\n            }}\n          >\n            <CartesianGrid strokeDasharray=\"2.5 2.5\" horizontal=\"true\" vertical=\"\" />\n            <XAxis dataKey=\"name\" opacity={0.5}/>\n            <YAxis type=\"number\" domain={[dataMin => (0), dataMax => Math.round(dataMax * 1.1)]} tick={6} />\n            <Tooltip />\n            <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#8884d8\" dot={{fill:\"\", stroke:\"\" }} />\n            <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" />\n          </LineChart>\n        </ResponsiveContainer>\n    );\n  }\n  \n  export default TBA3;\n\n  */\n\n  import React, { useState } from \"react\";\nimport \"./TBA1.css\";\nimport LineChart_TBA3 from \"./LineChart_TBA3\";\n//1134\nfunction TBA1() {\n\n\n  //const [data, setData] = useState([133230, 30240, 62305, 66039, 20594,15928, 59604, 79472, 52938, 28395, 19383, 58493, 38295, 66666, 37591]);\n  const data = [\n    {\n      name: '1월',\n      uv: 4100,\n      pv: 2400,\n      amt: 2400,\n    },\n    {\n      name: '2월',\n      uv: 3000,\n      pv: 1398,\n      amt: 2210,\n    },\n    {\n      name: '3월',\n      uv: 2000,\n      pv: 800,\n      amt: 2290,\n    },\n    {\n      name: '4월',\n      uv: 2780,\n      pv: 2208,\n      amt: 2000,\n    },\n    {\n      name: '5월',\n      uv: 1890,\n      pv: 1800,\n      amt: 2181,\n    },\n    {\n      name: '6월',\n      uv: 1390,\n      pv: 2800,\n      amt: 2500,\n    },\n    {\n      name: '7월',\n      uv: 3490,\n      pv: 2300,\n      amt: 2100,\n    },\n    {\n      name: '8월',\n      uv: 3490,\n      pv: 1300,\n      amt: 2100,\n    },\n    {\n      name: '9월',\n      uv: 4490,\n      pv: 1300,\n      amt: 2100,\n    },\n    {\n      name: '10월',\n      uv: 3490,\n      pv: 2300,\n      amt: 2100,\n    },\n    {\n      name: '11월',\n      uv: 3490,\n      pv: 2700,\n      amt: 2100,\n    },\n    {\n      name: '12월',\n      uv: 3990,\n      pv: 1800,\n      amt: 2100,\n    },\n  ];\n                                \n  return (\n    <React.Fragment>\n\n        <div id=\"#BarChart_TBA1_div\" style={{display: \"flex\", justifyContent: \"space-between\", margin: \"0 -2% 5% -5%\", opacity: \"0.7\",fontSize: \"14px\"}}> \n            <div> 방문 여행객 거주지 그래프</div>\n            \n            <div id=\"checkDataDate\" style={{opacity: \"0.5\"}}>\n              <button>오늘</button>\n              <button>7일</button>\n              <button>15일</button>\n              <button>한달</button>\n              <button>1년</button>\n            </div>\n          </div>\n      <LineChart_TBA3 data={data} />\n     \n    </React.Fragment>\n  );\n}\n\nexport default TBA1;","import React from 'react';\nimport Bar1 from './bar/Bar1';\nimport Bar2 from './bar/Bar2';\nimport Bar3 from './bar/Bar3';\nimport Bar4 from './bar/Bar4';\nimport Bar5 from './bar/Bar5';\nimport Bar6 from './bar/Bar6';\nimport Circle1 from './circle/Circle1';\nimport Circle2 from './circle/Circle2';\nimport Line1 from './line/Line1';\nimport Line2 from './line/Line2';\nimport Line3 from './line/Line3';\nimport line4 from './line/Line4';\nimport line5 from './line/Line5';\nimport Pie1 from './pie/Pie1';\nimport TBA1 from './tba/TBA1';\nimport TBA2 from './tba/TBA2';\nimport TBA3 from './tba/TBA3';\nimport {Routes, Link, Outlet, Route } from \"react-router-dom\";\n\n\n\nexport const Home = () => {\n  return (\n   \n    <div>\n    <h1 style={{margin: '300px'}}>Studying Chart to d3 + react</h1>\n    <div className='content'>\n      <div>\n        <h3>Bar Chart</h3>\n          <div><Link to=\"Bar1\">Bar1</Link></div>\n          <div><Link to=\"Bar2\">Bar2</Link></div>\n          <div><Link to=\"Bar3\">Bar3</Link></div>\n          <div><Link to=\"Bar4\">Bar4</Link></div>\n          <div><Link to=\"Bar5\">Bar5</Link></div>\n          <div><Link to=\"Bar6\">Bar6</Link></div>\n      </div>    <div className='line'></div>\n  \n   <div>\n         <h3>Circle Chart</h3>\n          <div><Link to=\"Circle1\">Circle1</Link></div>\n          <div><Link to=\"Circle2\">Circle2</Link></div>\n    </div>  <div className='line'></div> \n   \n   <div>\n         <h3>Line Chart</h3>\n        <div><Link to=\"Line1\">Line1</Link></div>\n        <div><Link to=\"Line2\">Line2</Link></div>\n        <div><Link to=\"Line3\">Line3</Link></div>\n        <div><Link to=\"Line4\">Line4</Link></div>\n        <div><Link to=\"Line5\">Line5</Link></div>\n   </div>\n        <div className='line'></div> \n  \n    <div>\n        <h3>Pie Chart</h3>\n         <div><Link to=\"Pie1\">Pie1</Link></div>\n    </div><div className='line'></div> \n    <div>\n        <h3>TBA</h3>\n        <div><Link to=\"TBA1\">TBA1</Link></div>\n        <div><Link to=\"TBA2\">TBA2</Link></div>\n        <div><Link to=\"TBA3\">TBA3</Link></div>\n    </div>\n\n    <Outlet />\n\n    </div>\n    </div>\n  );\n};\n\nexport default Home;","import {\n  BrowserRouter,\n  Routes,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport React from 'react';\nimport './App.css';\nimport Bar1 from './bar/Bar1';\nimport Bar2 from './bar/Bar2';\nimport Bar3 from './bar/Bar3';\nimport Bar4 from './bar/Bar4';\nimport Bar5 from './bar/Bar5';\nimport Bar6 from './bar/Bar6';\nimport Circle1 from './circle/Circle1';\nimport Circle2 from './circle/Circle2';\nimport Line1 from './line/Line1';\nimport Line2 from './line/Line2';\nimport Line3 from './line/Line3';\nimport Line4 from \"./line/Line4\";\nimport Line5 from \"./line/Line5\";\nimport Pie1 from './pie/Pie1';\nimport { Home } from './Home';\nimport TBA1 from \"./tba/TBA1\";\nimport TBA2 from \"./tba/TBA2\";\nimport TBA3 from \"./tba/TBA3\";\n\nfunction App() {\n  return (\n    <Routes>\n       <Route path=\"/\" element={<Home />} />\n\n\n  \n            <Route path=\"/Bar1\" element={<Bar1 />} />\n            <Route path=\"Bar2\" element={<Bar2 />} />\n            <Route path=\"Bar3\" element={<Bar3 />} />\n            <Route path=\"Bar4\" element={<Bar4 />} />\n            <Route path=\"Bar5\" element={<Bar5 />} />\n            <Route path=\"Bar6\" element={<Bar6 />} />\n            \n       \n       \n       \n            <Route path=\"Circle1\" element={<Circle1 />} />\n            <Route path=\"Circle2\" element={<Circle2 />} />\n   \n            <Route path=\"Line1\" element={<Line1 />} />\n            <Route path=\"Line2\" element={<Line2 />} />\n            <Route path=\"Line3\" element={<Line3 />} />\n            <Route path=\"Line4\" element={<Line4 />} />\n            <Route path=\"Line5\" element={<Line5 />} />\n     \n             <Route path=\"Pie1\" element={<Pie1 />} />  \n             <Route path=\"TBA1\" element={<TBA1 />} />  \n             <Route path=\"TBA2\" element={<TBA2 />} />  \n             <Route path=\"TBA3\" element={<TBA3 />} />  \n    </Routes>\n   \n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n     <HashRouter base=\"/\">\n        <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}